:mod:`hio.hioing`
=================

.. py:module:: hio.hioing

.. autoapi-nested-parse::

   hio.hioing module

   Generic Constants and Classes
   Exception Classes



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   hio.hioing.Mixin




Attributes
~~~~~~~~~~

.. autoapisummary::

   hio.hioing.Versionage
   hio.hioing.Version
   hio.hioing.SEPARATOR
   hio.hioing.SEPARATOR_BYTES


.. data:: Versionage
   

   

.. data:: Version
   

   

.. data:: SEPARATOR
   :annotation: = Multiline-String

    .. raw:: html

        <details><summary>Show Value</summary>

    .. code-block:: text
        :linenos:

        



    .. raw:: html

        </details>

   

.. data:: SEPARATOR_BYTES
   

   

.. exception:: HioError


   Bases: :py:obj:`Exception`

   Base Class for hio exceptions

   To use   raise HioError("Error: message")


.. exception:: ValidationError


   Bases: :py:obj:`HioError`

   Validation related errors
   Usage:
       raise ValidationError("error message")


.. exception:: VersionError


   Bases: :py:obj:`ValidationError`

   Bad or Unsupported Version

   Usage:
       raise VersionError("error message")


.. class:: Mixin(*pa, **kwa)


   Base class to enable consistent MRO for mixin multiple inheritance
   Allows each subclass to call
   super(MixinSubClass, self).__init__(*pa, **kwa)
   So the __init__ propagates to common top of Tree


